void GAME ::init()
{
 for(int i=0;i<SIZE1;i++)
 {
  for(int j=0;j<SIZE2;j++)
  {
   mp[i][j].v=0;
  // mp[i][j].d=NULL ; 
  }
 }

 int a[SIZE1][SIZE2]={
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6},
{6,8,8,8,8,8,8,8,6,0,6,0,6,0,6,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,6,0,6,0,6,3,6,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,6,0,6,0,6,0,6,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,6,0,6,0,6,0,6,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,6,0,6,0,6,0,6,8,8,8,8,8,8,8,6},
{6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6},
{6,0,6,2,6,0,6,0,6,0,6,7,6,0,6,0,6,0,6,0,6,0,6},
{6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6},
{6,0,6,0,6,0,6,0,6,0,7,7,7,0,6,0,6,0,6,0,6,0,6},
{6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6},
{6,0,6,0,6,0,6,0,6,0,6,7,6,0,6,0,6,0,6,4,6,0,6},
{6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6},
{6,8,8,8,8,8,8,8,6,0,6,0,6,0,6,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,6,0,6,0,6,0,6,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,6,0,6,0,6,0,6,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,6,1,6,0,6,0,6,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,8,8,8,8,8,8,6},
{6,8,8,8,8,8,8,8,6,0,6,0,6,0,6,8,8,8,8,8,8,8,6},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9}};


 for(int i=0;i<SIZE1;i++)
    {
    	for(int j=0;j<SIZE2;j++)
    	mp[i][j].v=a[i][j];
    }

 char ab[SIZE1][SIZE2]={
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','r','n','r','n','d','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','u','n','d','n','d','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','u','n','d','n','d','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','u','n','d','n','d','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','u','n','d','n','d','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','r','n','r','n','r','n','r','n','u','n','n','n','r','n','r','n','r','n','r','n','d','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','u','n','r','n','r','n','r','n','r','n','n','n','l','n','l','n','l','n','l','n','d','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','u','n','l','n','l','n','l','n','l','n','n','n','d','n','l','n','l','n','l','n','l','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','u','n','u','n','d','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','u','n','u','n','d','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','u','n','u','n','d','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','u','n','u','n','d','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','u','n','l','n','l','n','n','n','n','n','n','n','n','n'},
{'n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n','n'}};


 for(int i=0;i<SIZE1;i++)
    {
    	for(int j=0;j<SIZE2;j++)
    	mp[i][j].d=ab[i][j];
    }

}


void GAME::print_map()
{
  for(int i=0;i<SIZE1;i++)
	{
	for(int j=0;j<SIZE2;j++)
     {
	 if(mp[i][j].v==9)
     printf("-");
     else if(mp[i][j].v==6)
     printf("|");
     else if(mp[i][j].v==8)
     printf("*");
     else if(mp[i][j].v==7)
     printf("$");
     else if(mp[i][j].v==1)
     printf("1");
     else if(mp[i][j].v==2)
     printf("2");
     else if(mp[i][j].v==3)
     printf("3");
     else if(mp[i][j].v==4)
     printf("4");
     else
     printf(" ");
	 }
     printf("\n");
    }
    if(count4==4)
    printf("player 4 wins\n");
    else if(count3==4)
    printf("player 3 wins\n");
    else if(count2==4)
    printf("player 2 wins\n");
    else if(count1==4)
    printf("player 1 wins\n");
    if(temp==1)
     exit(1);
}
